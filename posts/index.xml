<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on IMTorg Kbase</title>
    <link>https://imtorgdemo.github.io/posts/</link>
    <description>Recent content in Posts on IMTorg Kbase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://imtorgdemo.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comparing Brand Monitoring Vendors with Other Operational Awareness Approaches</title>
      <link>https://imtorgdemo.github.io/posts/blog_biz-brand_monitoring/</link>
      <pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_biz-brand_monitoring/</guid>
      <description>Operational Awareness is one of the most important aspects a firm must perform. However, most firms don&amp;rsquo;t have an office directly responsible for this work. Instead, a subset of this work, Brand Monitoring, is part of the Marketing department, which might include a more general reputation and crisis management office, if the firm is large enough. Below, explores this field, as well as tools and approaches to improve efficacy of results.</description>
    </item>
    
    <item>
      <title>Programming for Balancing Short- and Long-Term Needs</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-py_paradigms/</link>
      <pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-py_paradigms/</guid>
      <description>Software engineering is all about design and balancing requirements. Anyone can learn syntax and how to code, but there are so many challenges to scaling as the codebase grows. Some aspects to balance include delivering functionality vs code debt, deploying solutions vs preferred architecture, and countless others. In addition, developers need to not only understand and keep updated on the language, but also the ecosystem of libraries and tools, underlying data structures and algorithms, and also design patterns.</description>
    </item>
    
    <item>
      <title>Cheatsheet for Documentation</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-py_docs/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-py_docs/</guid>
      <description>The README.md file Docstring Single-line for a function Focus on &amp;lsquo;do this, return that&amp;rsquo;. def multiplier(a,b): &amp;#34;&amp;#34;&amp;#34;Take in two numbers, return their product.&amp;#34; product = a*b return product Multi-line for function The PEP 257 provides standard conventions for usage. def multiplier(a,b): &amp;#34;&amp;#34;&amp;#34; Take in two numbers, return their product. This is typical multiplication for two scalars with no extension to matrices. Args: a(int): a decimal integer b(int): another decimal integer Returns: product(str): string of the product of a and b Raises: IOError: an error occurred.</description>
    </item>
    
    <item>
      <title>Cheatsheet for PyTest Configurations</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-py_pytest/</link>
      <pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-py_pytest/</guid>
      <description>Multiple tests Run the same test code with many different parameters to create multiple tests. All tests will run even if there is a failure.
recs = [(1,2),(2,3),(3,4)] @pytest.mark.parametrize(&amp;#34;x, y&amp;#34;, recs ) def test_extract_process(x, y): val = my_function(x) assert val == y Fixtures Use fixtures to run code before and after all tests.
Database fixture @pytest.fixture() def resource_db(): # setup log_file = Path(&amp;#39;./tests/tmp/process.log&amp;#39;) db_file = Path(&amp;#39;./tests/tmp/test.db&amp;#39;) logger = Logger(log_file).create_logger() db = Database(db_file = db_file, tables_list = LIST_ALL_TABLES, meta = meta, logger = logger, path_download = &amp;#39;.</description>
    </item>
    
    <item>
      <title>Terminology Useful for NLP</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-intro_terminology/</link>
      <pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-intro_terminology/</guid>
      <description>NLP allows for both theoretical and practical study of language. Below are a few of aspects of study, as well as terminology, that is frequently used within the field. Because of the interdisciplinary nature of computational linguistics, the terms come from linguistics, computer science, and mathematics.
Semiotics - a philosophical theory covering the relationship between signs and the things they reference.
Phonetic and Phonological Knowledge - Phonetics is the study of language at the level of sounds while phonology is the study of the combination of sounds into organized units of speech.</description>
    </item>
    
    <item>
      <title>Three Levels of Customer Explanations for Data Science</title>
      <link>https://imtorgdemo.github.io/posts/blog_biz-customer_explanation/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_biz-customer_explanation/</guid>
      <description>Every customer is different. That seems obvious until they begin to ask you specific questions about your work - or they don&amp;rsquo;t ask anything at all. It is good to have a framework for providing information: starting general and moving to more specific. Note that at no time are you at the math or calculation level. I&amp;rsquo;ve never seen that go well.
Solution level: What you&amp;rsquo;re doing Nothing special here, just input and output.</description>
    </item>
    
    <item>
      <title>Determining Sample Size for AI Models</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-sample_size_calc/</link>
      <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-sample_size_calc/</guid>
      <description>We are going to dive into the deep disturbing world of sample size in AI. This work is RARELY done as part of AI solutions. There are comparatively few research papers on this topic, and the approaches they offer tend to be specific to the underlying problem addressed in the paper. However, the simple fact that it is poorly understood gives great understanding to the world of AI, which is why I describe it as &amp;lsquo;disturbing&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Design Thinking and Employee Maturity</title>
      <link>https://imtorgdemo.github.io/posts/blog_pm-mentorship/</link>
      <pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_pm-mentorship/</guid>
      <description>I thought about why I felt like some data scientists are more Junior- to Mid- level data scientists; rather than Mid- to Senior- level. The reason I think this is because I often ask them to propose some type of design for a solution to multiple requirements / problems. The response is almost always &amp;lsquo;how do I do this?&amp;rsquo; - bad answer. This is very different from high-performing teams I&amp;rsquo;ve been on where it is more common to have multiple people arguing over multiple solution designs.</description>
    </item>
    
    <item>
      <title>SpaCy Internals</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-spacy_internals/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-spacy_internals/</guid>
      <description>I think there is some confusion about the different components - I&amp;rsquo;ll try to clarify:
The tokenizer does not produce vectors. It&amp;rsquo;s just a component that segments texts into tokens. In spaCy, it&amp;rsquo;s rule-based and not trainable, and doesn&amp;rsquo;t have anything to do with vectors. It looks at whitespace and punctuation to determine which are the unique tokens in a sentence.
An nlp model in spaCy can have predefined (static) word vectors that are accessible on the Token level.</description>
    </item>
    
    <item>
      <title>Powerpoint Usage: Commercial vs Government Firms</title>
      <link>https://imtorgdemo.github.io/posts/blog_biz-communication/</link>
      <pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_biz-communication/</guid>
      <description>Powerpoint is becoming a de-facto form of communication both within and between organizations. This has both pros and cons, but the important thing to emphasize, when you can, is that it is just a tool. As soon as slides become a sacred cow, then you&amp;rsquo;re no longer delivering value. You&amp;rsquo;re just pushing propaganda.
Commercial
can be a useful tool provide talking points a way to start a discussion with the customer leads to key concepts that customer should take away fewer presentations, but similar pitch, supports personal engagement will definitely have a few important numbers, that will be discussed not the place to make promises / commits; that is during contract negotiation and final delivery Government</description>
    </item>
    
    <item>
      <title>User Stories vs Data Stories</title>
      <link>https://imtorgdemo.github.io/posts/blog_pm-user_stories/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_pm-user_stories/</guid>
      <description>Agile is used to remove uncertainty from projects, so that the features for development are fairly clear, at least for the current iteration. However, producing an analytics application creates many more tasks because it is focused on data. To remove uncertainty from these data tasks, and the overall project, we keep it separate from development. This ensures that we: i) understand the data, ii) have a clear methodology for addressing problems using the data.</description>
    </item>
    
    <item>
      <title>The &#39;Slack&#39; Form of Communication - From A Business Size Perspective</title>
      <link>https://imtorgdemo.github.io/posts/blog_pm-tech_communication/</link>
      <pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_pm-tech_communication/</guid>
      <description>A colleague of mine has put-off using Slack for a while. She&amp;rsquo;s totally committed to Skype for Business, which I&amp;rsquo;m a little revolted by. When I described Slack to her, &amp;lsquo;Instead of separate conversations, you have a continuing discussion or narrative with people. You often end using it as a Knowledge Base&amp;rsquo;. Her response to that, &amp;lsquo;so I can&amp;rsquo;t use it for the things that shouldn&amp;rsquo;t go in writing &amp;ndash; got it.</description>
    </item>
    
    <item>
      <title>Managing Cloud Infrastructure with Visual Tools</title>
      <link>https://imtorgdemo.github.io/posts/blog_cloud-visual_tools/</link>
      <pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_cloud-visual_tools/</guid>
      <description>I&amp;rsquo;m a big fan of using cloud environments, especially for getting a product started. But for early prototyping with a small team, remembering everything that needs to be created / configured, as well as everything that is already performed, can be daunting. To improve this process, I&amp;rsquo;ve started using visual tools to help document my work. This is a reasonable approach because most aspects of the infrastructure should have a corresponding physical implementation.</description>
    </item>
    
    <item>
      <title>The Tech Stack Quick Start Guide</title>
      <link>https://imtorgdemo.github.io/posts/blog_pm-tech_stack_guide/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_pm-tech_stack_guide/</guid>
      <description>This is a guide to the fastest and cheapest way to get your development project moving forward with typical tools and infrastructure.
Jira Jira is one of the oldest applications for applying Agile to a Team&amp;rsquo;s workflow. This is a really simple tool that comes across as overly-complicated because of all the available functionality. Stop trying to appease your corporate masters, Atlassian! New and simplified UIs are rolling-out to fix this.</description>
    </item>
    
    <item>
      <title>Why Data Scientists Need Some Fundamental Front End Skills</title>
      <link>https://imtorgdemo.github.io/posts/blog_ds-web_skills/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_ds-web_skills/</guid>
      <description>Most data scientists are lucky to have a basic understanding of HTML, or web applications, in general. However, this dearth of knowledge can be quite limiting as their career grows. They will not be able to grow their skills more broadly to areas such as data visualization or web scraping. They will also have difficulty leading mixed teams delivering complete solutions. They can be easily relegated to creating models of simple reports.</description>
    </item>
    
    <item>
      <title>Public vs Private Sector Employment</title>
      <link>https://imtorgdemo.github.io/posts/blog_biz-hire_for_govt/</link>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_biz-hire_for_govt/</guid>
      <description>Comparing offers between the federal government and private sector can be very difficult. It is more akin to choosing between an academic career than it is a choice with another commercial employer. Because of the benefits the government offers, it is very much an apples and oranges comparison.
Here are three huge benefits of working with the government:
Retirement - occaisionally, some very large, older firms (insurance or banking) will have a pension system.</description>
    </item>
    
    <item>
      <title>Difficulties in Working with Contractor Teams on Data Science Projects</title>
      <link>https://imtorgdemo.github.io/posts/blog_pm-tech_contractors/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_pm-tech_contractors/</guid>
      <description>Working with contractors can be very helpful in some situations. There is an understanding of support without long-term commitment. However, giving too much control to contractors can be very dangerous because their incentives are often quite different from yours.
This is especially true in Data Science projects because of the long-term investments that must be made. There are several areas of caution which should be addressed to ensure the project is kept under control.</description>
    </item>
    
    <item>
      <title>What to do after an initial MVP: The &#39;Throw One Away&#39; Method</title>
      <link>https://imtorgdemo.github.io/posts/blog_pm-tech_after_mvp/</link>
      <pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_pm-tech_after_mvp/</guid>
      <description>You built it, it works, but you&amp;rsquo;re far from monetization or even consistent users. So, how do you proceed? Below is a list of questions to ask yourself.
Did you solve the problem for which you originally targeted? Is the original problem that you intended to solve still important? Oftentimes, you may need to decompose the problem in greater detail: What aspects of the problem are users most concerned? The greater problem depth will lend to 2-3 detailed solution methodologies: How (by what criteria) should we best solve it?</description>
    </item>
    
    <item>
      <title>A Reasonable MVP Tech Stack</title>
      <link>https://imtorgdemo.github.io/posts/blog_pm-tech_stack/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_pm-tech_stack/</guid>
      <description>This is a quick summary of products needed to get a development team started. We can manage accounts for code repositories. GitLab is especially good because it is open-source, and it is highly customizable. It is one of several Team ‘infrastructure’ projects necessary for effectively building software.
This is a summary of code repository platforms with explanations:
Atlassian (firm)– the company with a suite of different project management tools, including Trello, Jira, BitBucket, and others.</description>
    </item>
    
    <item>
      <title>Computer Vision Using PyTorch</title>
      <link>https://imtorgdemo.github.io/posts/blog_models-pytorch_computervision/</link>
      <pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_models-pytorch_computervision/</guid>
      <description>The deep learning movement began by applying neural networks to image classification. PyTorch became a leading framework for work in this field. This post provides a cheatsheet to some of the basic methods used for computer vision, using PyTorch.
Configuration This is a typical environment setup. Seed the Random Number Generator for all devices (both CPU and CUDA) using manual_seed() so that work can be reproduced. Computations are deterministic only on your specific problem, platform, and PyTorch release.</description>
    </item>
    
    <item>
      <title>Neural Network Basics: Linear Regression with PyTorch</title>
      <link>https://imtorgdemo.github.io/posts/blog_models-neuralnet_pytorch_intro/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_models-neuralnet_pytorch_intro/</guid>
      <description>In just a few short years, PyTorch took the crown for most popular deep learning framework. Its concise and straightforward API allows for custom changes to popular networks and layers. While some of the descriptions may some foreign to mathematicians, the concepts are familiar to anyone with a little experience in machine learning. This post will walk the user from a simple linear regression to an (overkill) neural network model, with thousands of parameters, which provides a good base for future learning.</description>
    </item>
    
    <item>
      <title>PySpark Refresher Tutorial</title>
      <link>https://imtorgdemo.github.io/posts/blog_bigdata_pyspark-refresher/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_bigdata_pyspark-refresher/</guid>
      <description>Spark is the primier BigData tool for data science, and PySpark supports a natural move from the local machine to cluster computing. In fact, you can use PySpark on your local machine in standalone mode just as you would on a cluster. In this post, we provide a refresher for those working on legacy or other systems, and want to quickly transition back to Spark.
Environment When using the pyspark-shell, the spark.</description>
    </item>
    
    <item>
      <title>A Cheatsheet for Python&#39;s Pipenv</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_py-pipenv_virtualenv/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_py-pipenv_virtualenv/</guid>
      <description>Python&amp;rsquo;s Pipenv and Pyenv make a strong team for creating a consistent development environment for exact specifications. Pyenv allows you to choose from any Python version for your project. Pipenv attempts to improve upon the original virtual environment (venv) and requirements.txt file. It does some things well, including integration of virtual environment with dependecy management, and is straight-forward to use. Unfortunately, it doesn&amp;rsquo;t always live up to the originally-planned, ambitious, goals.</description>
    </item>
    
    <item>
      <title>Working with XML Data Using Python</title>
      <link>https://imtorgdemo.github.io/posts/blog_datastore-xml_elementtree/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_datastore-xml_elementtree/</guid>
      <description>Together with JSON, the XML format is the most popular structure for data on the web. It is not only used for data storage, but also for websites, in the form of HTML. XML was seen as the ubiquitous data format, but with the ascent of Javascript, JSON became more popular for web applications. Still, XML is an effective format, and learning to parse and work with it is necessary for anyone who works with a variety of data sources.</description>
    </item>
    
    <item>
      <title>An Introduction to Numpy and Pandas</title>
      <link>https://imtorgdemo.github.io/posts/blog_ds-intro_numpy_pandas/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_ds-intro_numpy_pandas/</guid>
      <description>Numpy and Pandas are the basic data science tools in the Python environment. Having a good understanding of their capabilities and how they process data is imperative to writing optimal code. This post provides an introductory overview and a refresher for those who might come back to the libraries after taking a break. The end of the post explains external interfaces for increasing code execution and performing more sophisticated matrix operations.</description>
    </item>
    
    <item>
      <title>Python Functional Programming</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-python_functional/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-python_functional/</guid>
      <description>Introduction Most programming languages are procedural or are written in an imperative style: programs are lists of instructions that tell the computer what to do with the program’s input. Even &amp;lsquo;purely&amp;rsquo; OOP languages, such as Java, are typically written in an imperative style with little thought give in actual OOP modeling.
Functional code is characterised by one thing: the absence of side effects. It doesn’t rely on data outside the current function, and it doesn’t change data that exists outside the current function.</description>
    </item>
    
    <item>
      <title>Object Oriented Programming with Python</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-python_oop/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-python_oop/</guid>
      <description>Object Oriented Programming (OOP) programming became popular with Java. Microsoft quickly followed-up with the C# language. Now, OOP concepts are available in many languages. Python inherits alot of these OOP attributes, but performs it in its usual pythonic minimalism. The concepts are the same, but much of the cruft, such as accessor modifiers, are limited, leaving an succinct and enjoyable object modeling experience.
Introduction OOP deals with classes (blueprints) and objects (instances of blueprint).</description>
    </item>
    
    <item>
      <title>Spark Deployments</title>
      <link>https://imtorgdemo.github.io/posts/blog_ds_spark_deployment/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_ds_spark_deployment/</guid>
      <description>Hadoop is seen as the staple of clusters and distributed management. Spark is ubiquitous data science tool. What if you combine Hadoop with Spark? We will explore that question and compare different deployment architectures in this post.
Introduction As Storage you use HDFS. Analytics is done with Apache Spark and YARN is taking care of the resource management. Why does that work so well together?
From a platform architecture perspective, Hadoop and Spark are usually managed on the same cluster.</description>
    </item>
    
    <item>
      <title>The R and Pandas Dataframe</title>
      <link>https://imtorgdemo.github.io/posts/blog_ds-dataframe_r_and_pandas/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_ds-dataframe_r_and_pandas/</guid>
      <description>Although Pandas uses the Dataframe as its primary data structure, just as R does, the Pandas syntax and underlying fundamentals can be disorienting for R users. This post will describe some basic comparisons and inconsistencies between the two languages. It will also provide some examples of very non-intuitive solutions to common problems.
Introduction In the Datascience R versus Pandas debate, it is really an apples and oranges comparison. R is a domain specific language in the field of statistics, analytics, and data visualization.</description>
    </item>
    
    <item>
      <title>Working through a Progressive Python Application</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_python-develop_and_deploy/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_python-develop_and_deploy/</guid>
      <description>This post walks the developer through a python application as it progresses in development. It uses linux, docker, vscode, pyenv, pipenv and other tools for developing, building, and deploying an application.
Environment Two tools can help you setup your local development environment: pyenv and pipenv. Pyenv is good for getting the correct python version. Pipenv is quite good at setting your virtual environment so that your versions of python and dependencies are separate from your actual machine.</description>
    </item>
    
    <item>
      <title>Ranking Text With Word Embeddings</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-rank_text_with_word_vector/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-rank_text_with_word_vector/</guid>
      <description>I recently implemented search functionality for my Hugo site, which can be seen at: https://imtorgdemo.github.io/pages/search/. The search uses lunr.js, an implementation of Solr. While it works, sufficiently, the metadata used for ranking queries could be improved. It would also be nice to visually locate the results by where resulting posts fit into the three data science fundamental disciplines: mathematics, computer science, and business. This narrative provides a quick solution for ranking posts by each discipline, then reducing the dimensions to 3 axes in the xy-plane.</description>
    </item>
    
    <item>
      <title>The Insecurities of the &#39;Great Men&#39;</title>
      <link>https://imtorgdemo.github.io/posts/blog_history-greatman_insecurity/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_history-greatman_insecurity/</guid>
      <description>While it may be tough to find the true nature of people, past their outward appearance, it can provide insight into all people, and to yourself. The &amp;lsquo;Great Man&amp;rsquo; theory that leaders are born and not made came about in the 19th century when British aristocrats attained powerful positions through nepotism. It was primarily concerned with explaining leaders such Walpole, Wellington, and Caesar. Much of what is learned in history is their propoganda - getting the reality is much more difficult.</description>
    </item>
    
    <item>
      <title>Distributing Code in Python</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_py-distributing_code/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_py-distributing_code/</guid>
      <description>Distributing and deploying products is a necessary step in the solution development process, and an imperative in business. Each solution must be thoughtfully analyzed for strengths and weaknesses, especially from the perspective of security. The decisons you make are largely based on the language employed to create the solution. This post will describe steps taken in distributing a Python solution.
Introduction to Bytecode Simple python scripts are a terrific approach to getting work done, quickly.</description>
    </item>
    
    <item>
      <title>Incorporating an Initial Training Sample into a Project</title>
      <link>https://imtorgdemo.github.io/posts/blog_math-reuse_tng_sample/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_math-reuse_tng_sample/</guid>
      <description>During a data science project, data is often provided in an incremental manner. Some customer files are easier to obtain than others, such as when lengthy unarchiving processes are warranted. To ensure no time is wasted, available data can be put to use with initial analyses and model training as a Training Sample. The same data is incorporated with Training data when it is formally split into Training and Holdout sets.</description>
    </item>
    
    <item>
      <title>Syntax Comparisons Across Languages</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-language_syntax_comparison/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-language_syntax_comparison/</guid>
      <description>Scripting languages are quite popular for effectively getting work done. But, their similarities lead to mental difficulties when remembering syntax and common idioms. This post is used as a cheatsheet describing fundamental differences in how the languages are used.
Introduction In any one day, I may program in five or six different languages. This is enjoyable when the syntax is different enough that there is no confusion. Domain Specific Languages, including R, SQL, Bash, and HTML, are orthogonal in their approach to being productive.</description>
    </item>
    
    <item>
      <title>Processing Natural Language with Python and Friends</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-intro_spacy/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-intro_spacy/</guid>
      <description>Python is a typical language chosen for Data Science work, and its strengths with strings make it especially useful for working with natural language. While the nltk library opened-up this work for python users, the newer spacy improves upon processing power by implementing Cython code. Tests display its power in production when compared with more traditional approaches, such as with Stanford&amp;rsquo;s CoreNLP. This post is an outline of examples from the spacy coursework and examples.</description>
    </item>
    
    <item>
      <title>Historical Background of NLP with Deep Learning</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-history_nlp_deep_learn/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-history_nlp_deep_learn/</guid>
      <description>The automated linguistic annotation of natural languages kept linguists and computer scientists hard at work for many decades. This work focused on the syntax of language as well as basic understanding and includes part-of-speech, named entity categorization, and syntatic dependency. Language meta-data tagging became much more accurate with the introduction of neural network and deep learning models. Because pairing meta-data with more powerful models is sure to allow for an explosion of new applications, it is important to understand the developments that allowed for the creation of this technology.</description>
    </item>
    
    <item>
      <title>Prototyping an Interactive Frontend with Vue</title>
      <link>https://imtorgdemo.github.io/posts/blog_prototype-creating_frontend/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_prototype-creating_frontend/</guid>
      <description>Assumes you are comfortable with HTML, CSS, JS. This will cover creating SPAs with webpack and Vue basics. This will not cover mobile or advanced Vue. Improvements will make frontend development a more imperative programming approach as compared to the typical declarative methods found in more basic work.
Introduction Once you understand the basics of browser languages, such as HTML, CSS, and JS, then you quickly desire to have more interactive elements.</description>
    </item>
    
    <item>
      <title>Explaining Difficult (Abstract) Subjects to Customers</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-explain_metrics/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-explain_metrics/</guid>
      <description>Stakeholders want to understand what you are selling and how your approach is different. However, the level of detail they want varies greatly among your different customers. A simple whitepaper can be useful enough, in most situations. But, occaisionally, a layman will want to know exactly what you are doing and will not be content until you very succinctly explain it to them. This post will explain two methods for approaching such obstacles.</description>
    </item>
    
    <item>
      <title>Working with Matrices and Tensors in PyTorch</title>
      <link>https://imtorgdemo.github.io/posts/blog_models-matrix_tensor_operations/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_models-matrix_tensor_operations/</guid>
      <description>The Artificial Intelligence field is moving from single-function libraries to frameworks for building different network models. TensorFlow was one of the first, and has strong production capabilities, such as process optimizations. However, its syntax is unintuitive, and the library has a reputation for being difficult for testing new models. This led to many organizations adopting PyTorch, with underlying Numpy, for designing network models. This post describes the basic data structures for working with Matrices and Tensors in PyTorch.</description>
    </item>
    
    <item>
      <title>A Letter to Students: Math is the Basis for Competitive Edge in Every Field</title>
      <link>https://imtorgdemo.github.io/posts/blog_math-competitive_edge/</link>
      <pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_math-competitive_edge/</guid>
      <description>Math is the greatest tool humans have for solving problems. However, it is incredibly expensive to get the experience of using it in the real-world. This is magnified by most teachers, and many university professors, not having any experience applying math anyplace other than academic contexts. This post shows the author&amp;rsquo;s trying experiences with learning maths in school, as well as the excitement of applying them to solve actual industry problems.</description>
    </item>
    
    <item>
      <title>Building Math from the Ground-Up</title>
      <link>https://imtorgdemo.github.io/posts/blog-logic_for_math/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog-logic_for_math/</guid>
      <description>After completing basic high school mathematics, one might think that math stands on its own. To understand and know that 1+1=2 is obvious. But math can go much deeper. In fact, we can build new concepts from math as well as build a math, itself. This is important because it effects how we think about other subjects, and is especially useful in helping us think about language and abstract concepts, such as in programming.</description>
    </item>
    
    <item>
      <title>Communication Workflows with Hugo, Jupyter, and Friends</title>
      <link>https://imtorgdemo.github.io/posts/blog-hugo_site_process/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog-hugo_site_process/</guid>
      <description>Static Site Generators are quite popular replacements for traditional server-based methods of delivering HTML. One of the most popular is Hugo because of its compilation speed. Combining Hugo with Jupyter notebooks, and other tools, can provide for a speedy workflow for pushing your ideas to the web, books (online or pdf), and more. This post will discuss why you may want to do this and provides tools for doing it.</description>
    </item>
    
    <item>
      <title>Introduction to LaTeX</title>
      <link>https://imtorgdemo.github.io/posts/blog-intro_latex/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog-intro_latex/</guid>
      <description>LaTeX is the document preparation and typesetting system used for scientific publications. LaTeX is based on the idea that &amp;lsquo;it is better to leave document design to document designers&amp;rsquo;, so the user can focus on the content. It requires a greater technical understanding than typical simple note-taking systems; however, because it is incredibly descriptive and produces aesthetically-appealing output, it is becoming more popular. This post provides a reference to configuration and syntax.</description>
    </item>
    
    <item>
      <title>A Data Scientist&#39;s Guide to Modern Java(8&#43;) and the JVM</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_java-modern_java/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_java-modern_java/</guid>
      <description>Most data scientists avoid the Java Virtual Machine (JVM) like the plague. The features that make developers and data engineers so productive as a team, such as access modifiers and powerful IDEs, feel slow, old, and cumbersome to individuals interacting with data and prototyping new algorithms. However, the JVM and its supporting system matured to an indominatble force since its inception. It is ubiquitous in the most popular open-source projects; espectially in Big Data and distributed systems, such as Hadoop and Kafka.</description>
    </item>
    
    <item>
      <title>Introduction to Groovy for Data Science on the JVM</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_java-groovy/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_java-groovy/</guid>
      <description>Groovy is a scripting language that compiles to the Java Virtual Machine. It would be more-aptly named JavaScript if that name were not already taken, but it has many similarities to Python. In fact, some of the libraries implemented for Groovy, such as TableSaw, attempt to take it in the same Data Science direction as Python.
This post will provide an introduction to the Groovy language using Jupyter notebook with BeakerX, and provides specific applications to Data Science.</description>
    </item>
    
    <item>
      <title>The Cost of Internal Investment</title>
      <link>https://imtorgdemo.github.io/posts/blog_econ-return_rate/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_econ-return_rate/</guid>
      <description>There is one question on every economist&amp;rsquo;s mind: Where has inflation gone? It is imperative to understanding how actors make decisions and allocate limited resources. The fact that the inflation rate is so low for so long is incredibly disconcerting for many reasons (with the fear of deflation being just one reason).
Because of low growth and a lack of inflation the US government and Federal Reserve, as well as nearly every nations&amp;rsquo; central Bank, are pouring fuel onto the economy and getting a paltry return.</description>
    </item>
    
    <item>
      <title>The Linux Command Line with Fish Shell</title>
      <link>https://imtorgdemo.github.io/posts/blog_cmdln-linux_fish/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_cmdln-linux_fish/</guid>
      <description>The Linux terminal (typically implemented with the Bourne Again Shell Script, BASH) can be intimidating for beginners and annoying for experienced programmers. But, it is a necessity for most users of Linux; and, in many situations, it can also be a huge productivity enhancer over graphical interfaces.
Fish is a commandline tool that is a great complement to BASH. It is highly configureable and provides nice features such as syntax coloring and TAB command completion, out-of-the-box.</description>
    </item>
    
    <item>
      <title>Simple, Scalable, and Responsive Data Retrieval with ElasticSearch</title>
      <link>https://imtorgdemo.github.io/posts/blog_datastore-elasticsearch/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_datastore-elasticsearch/</guid>
      <description>Distributed systems are very popular tools in the &amp;lsquo;big data&amp;rsquo; market space and ElasticSearch evolved to become one of the major players. It serves the niche role of scaling to store large amounts of data, then allows querying it quickly. It evolved greatly over the last ten years to provide a variety of functionality. While it serves its primary purpose well, teams should resist the urge to use it in other roles, such as advanced analytics.</description>
    </item>
    
    <item>
      <title>Solving Textual Problems with Regular Expressions</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-regular_expressions_workflow/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-regular_expressions_workflow/</guid>
      <description>Regular Expressions provide an important foundation for learning systems. They are useful for quick and direct approaches to solving problems without creating mounds of training data, nor the infrastructure for deploying a model. While they are a common programming technique, and simple enough to employ, they tend to be used so infrequently that you must re-learn them each time you wish to apply. This post summarizes the basic regex syntax, strategies, and workflow in hopes it will decrease the time needed to implement.</description>
    </item>
    
    <item>
      <title>Generalizing the Machine Learning Process</title>
      <link>https://imtorgdemo.github.io/posts/blog_models-machine_learning/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_models-machine_learning/</guid>
      <description>This work describes a general approach to follow when performing machine learning (ML) manually, and when automating in a deployment setting. Unlike a classical statistical analysis, standard machine learning projects typically follow a general and repeatable process. While the practictioner should be aware of details for each of the steps and the reasons for choosing them, there is much less design-thinking and checking of assumptions that are necessary components of more mathematical modeling fields.</description>
    </item>
    
    <item>
      <title>Formatting for Jupyter (.ipynb) Notebooks</title>
      <link>https://imtorgdemo.github.io/posts/blog_test-hugo_blog/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_test-hugo_blog/</guid>
      <description>This is a test post for formatting Jupyter Notebooks for Hugo. This workflow makes use of the code at repository nb2hugo, as well as the beakerx jupyter kernel.
This is will test blog is a complicated workflow. Begin by running the newest version of JupyterLab. Run through the basic markdown sections. Next, try working with the R kernel by using rpy2 library. Run these cells to ensure functionality.
Then close the notebook and re-open it in Beakerx with the beakerx Groovy kernel.</description>
    </item>
    
    <item>
      <title>Formatting a Markdown Post</title>
      <link>https://imtorgdemo.github.io/posts/blog_test-my_first_post/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_test-my_first_post/</guid>
      <description>Cupiditate voluptas sunt velit. Accusantium aliquid expedita excepturi quis laborum autem. Quas occaecati et atque est repellat dolores. Laudantium in molestiae consequatur voluptate ipsa.
Nulla quia non qui sed. Voluptatem et enim nesciunt sunt pariatur. Libero eius excepturi voluptatibus reprehenderit. Facere enim neque dolorem sed ullam non. Dolor sit molestias repellendus.
Awesome-1 Facilis maiores doloribus similique sint quaerat reiciendis quia. Autem nemo voluptas rerum. Eos odio aut omnis. Adipisci voluptas nihil autem recusandae.</description>
    </item>
    
    <item>
      <title>List of ToDo Posts</title>
      <link>https://imtorgdemo.github.io/posts/blog_page-todo/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_page-todo/</guid>
      <description>This is a list of blog posts that are referenced, but not yet complete.
List of Future Posts General Machine Learning
scoring metrics, model performance metrics, and graphs imbalanced data feature engineering models in-depth Natural Language Processing
functional programming numpy nltk / spaCy gensim word2vec fasttext nlp overview General Data Concepts
datawarehousing infrastructure architectures serverless deployments Business and Sales
pricing pyramid matching problems and solutions marketing -&amp;gt; business development -&amp;gt; sales cycle and org structure </description>
    </item>
    
  </channel>
</rss>
