<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on IMTorg Kbase</title>
    <link>https://imtorgdemo.github.io/posts/</link>
    <description>Recent content in Posts on IMTorg Kbase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://imtorgdemo.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with XML Data Using Python</title>
      <link>https://imtorgdemo.github.io/posts/blog_datastore-xml_elementtree/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_datastore-xml_elementtree/</guid>
      <description>Together with JSON, the XML format is the most popular structure for data on the web. It is not only used for data storage, but also for websites, in the form of HTML. XML was seen as the ubiquitous data format, but with the ascent of Javascript, JSON became more popular for web applications. Still, XML is an effective format, and learning to parse and work with it is necessary for anyone who works with a variety of data sources.</description>
    </item>
    
    <item>
      <title>An Introduction to Numpy and Pandas</title>
      <link>https://imtorgdemo.github.io/posts/blog_ds-intro_numpy_pandas/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_ds-intro_numpy_pandas/</guid>
      <description>Numpy and Pandas are the basic data science tools in the Python environment. Having a good understanding of their capabilities and how they process data is imperative to writing optimal code. This post provides an introductory overview and a refresher for those who might come back to the libraries after taking a break. The end of the post explains external interfaces for increasing code execution and performing more sophisticated matrix operations.</description>
    </item>
    
    <item>
      <title>Python Functional Programming</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-python_functional/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-python_functional/</guid>
      <description>Introduction Most programming languages are procedural or are written in an imperative style: programs are lists of instructions that tell the computer what to do with the program’s input. Even &amp;lsquo;purely&amp;rsquo; OOP languages, such as Java, are typically written in an imperative style with little thought give in actual OOP modeling.
Functional code is characterised by one thing: the absence of side effects. It doesn’t rely on data outside the current function, and it doesn’t change data that exists outside the current function.</description>
    </item>
    
    <item>
      <title>Object Oriented Programming with Python</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-python_oop/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-python_oop/</guid>
      <description>Object Oriented Programming (OOP) programming became popular with Java. Microsoft quickly followed-up with the C# language. Now, OOP concepts are available in many languages. Python inherits alot of these OOP attributes, but performs it in its usual pythonic minimalism. The concepts are the same, but much of the cruft, such as accessor modifiers, are limited, leaving an succinct and enjoyable object modeling experience.
Introduction OOP deals with classes (blueprints) and objects (instances of blueprint).</description>
    </item>
    
    <item>
      <title>Spark Deployments</title>
      <link>https://imtorgdemo.github.io/posts/blog_ds_spark_deployment/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_ds_spark_deployment/</guid>
      <description>Hadoop is seen as the staple of clusters and distributed management. Spark is ubiquitous data science tool. What if you combine Hadoop with Spark? We will explore that question and compare different deployment architectures in this post.
Introduction As Storage you use HDFS. Analytics is done with Apache Spark and YARN is taking care of the resource management. Why does that work so well together?
From a platform architecture perspective, Hadoop and Spark are usually managed on the same cluster.</description>
    </item>
    
    <item>
      <title>The R and Pandas Dataframe</title>
      <link>https://imtorgdemo.github.io/posts/blog_ds-dataframe_r_and_pandas/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_ds-dataframe_r_and_pandas/</guid>
      <description>Although Pandas uses the Dataframe as its primary data structure, just as R does, the Pandas syntax and underlying fundamentals can be disorienting for R users. This post will describe some basic comparisons and inconsistencies between the two languages. It will also provide some examples of very non-intuitive solutions to common problems.
Introduction In the Datascience R versus Pandas debate, it is really an apples and oranges comparison. R is a domain specific language in the field of statistics, analytics, and data visualization.</description>
    </item>
    
    <item>
      <title>Working through a Progressive Python Application</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_python-develop_and_deploy/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_python-develop_and_deploy/</guid>
      <description>This post walks the developer through a python application as it progresses in development. It uses linux, docker, vscode, pyenv, pipenv and other tools for developing, building, and deploying an application.
Environment Two tools can help you setup your local development environment: pyenv and pipenv. Pyenv is good for getting the correct python version. Pipenv is quite good at setting your virtual environment so that your versions of python and dependencies are separate from your actual machine.</description>
    </item>
    
    <item>
      <title>Ranking Text With Word Embeddings</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-rank_text_with_word_vector/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-rank_text_with_word_vector/</guid>
      <description>I recently implemented search functionality for my Hugo site, which can be seen at: https://imtorgdemo.github.io/pages/search/. The search uses lunr.js, an implementation of Solr. While it works, sufficiently, the metadata used for ranking queries could be improved. It would also be nice to visually locate the results by where resulting posts fit into the three data science fundamental disciplines: mathematics, computer science, and business. This narrative provides a quick solution for ranking posts by each discipline, then reducing the dimensions to 3 axes in the xy-plane.</description>
    </item>
    
    <item>
      <title>Incorporating an Initial Training Sample into a Project</title>
      <link>https://imtorgdemo.github.io/posts/blog_math-reuse_tng_sample/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_math-reuse_tng_sample/</guid>
      <description>During a data science project, data is often provided in an incremental manner. Some customer files are easier to obtain than others, such as when lengthy unarchiving processes are warranted. To ensure no time is wasted, available data can be put to use with initial analyses and model training as a Training Sample. The same data is incorporated with Training data when it is formally split into Training and Holdout sets.</description>
    </item>
    
    <item>
      <title>Syntax Comparisons Across Languages</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming-language_syntax_comparison/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming-language_syntax_comparison/</guid>
      <description>Scripting languages are quite popular for effectively getting work done. But, their similarities lead to mental difficulties when remembering syntax and common idioms. This post is used as a cheatsheet describing fundamental differences in how the languages are used.
Introduction In any one day, I may program in five or six different languages. This is enjoyable when the syntax is different enough that there is no confusion. Domain Specific Languages, including R, SQL, Bash, and HTML, are orthogonal in their approach to being productive.</description>
    </item>
    
    <item>
      <title>Processing Natural Language with Python and Friends</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-intro_spacy/</link>
      <pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-intro_spacy/</guid>
      <description>Python is a typical language chosen for Data Science work, and its strengths with strings make it especially useful for working with natural language. While the nltk library opened-up this work for python users, the newer spacy improves upon processing power by implementing Cython code. Tests display its power in production when compared with more traditional approaches, such as with Stanford&amp;rsquo;s CoreNLP. This post is an outline of examples from the spacy coursework and examples.</description>
    </item>
    
    <item>
      <title>Historical Background of NLP with Deep Learning</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-history_nlp_deep_learn/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-history_nlp_deep_learn/</guid>
      <description>The automated linguistic annotation of natural languages kept linguists and computer scientists hard at work for many decades. This work focused on the syntax of language as well as basic understanding and includes part-of-speech, named entity categorization, and syntatic dependency. Language meta-data tagging became much more accurate with the introduction of neural network and deep learning models. Because pairing meta-data with more powerful models is sure to allow for an explosion of new applications, it is important to understand the developments that allowed for the creation of this technology.</description>
    </item>
    
    <item>
      <title>Prototyping an Interactive Frontend with Vue</title>
      <link>https://imtorgdemo.github.io/posts/blog_prototype-creating_frontend/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_prototype-creating_frontend/</guid>
      <description>Assumes you are comfortable with HTML, CSS, JS. This will cover creating SPAs with webpack and Vue basics. This will not cover mobile or advanced Vue. Improvements will make frontend development a more imperative programming approach as compared to the typical declarative methods found in more basic work.
Introduction Once you understand the basics of browser languages, such as HTML, CSS, and JS, then you quickly desire to have more interactive elements.</description>
    </item>
    
    <item>
      <title>Explaining Difficult (Abstract) Subjects to Customers</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-explain_metrics/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-explain_metrics/</guid>
      <description>Stakeholders want to understand what you are selling and how your approach is different. However, the level of detail they want varies greatly among your different customers. A simple whitepaper can be useful enough, in most situations. But, occaisionally, a layman will want to know exactly what you are doing and will not be content until you very succinctly explain it to them. This post will explain two methods for approaching such obstacles.</description>
    </item>
    
    <item>
      <title>Working with Matrices and Tensors in PyTorch</title>
      <link>https://imtorgdemo.github.io/posts/blog_models-matrix_tensor_operations/</link>
      <pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_models-matrix_tensor_operations/</guid>
      <description>The Artificial Intelligence field is moving from single-function libraries to frameworks for building different network models. TensorFlow was one of the first, and has strong production capabilities, such as process optimizations. However, its syntax is unintuitive, and the library has a reputation for being difficult for testing new models. This led to many organizations adopting PyTorch, with underlying Numpy, for designing network models. This post describes the basic data structures for working with Matrices and Tensors in PyTorch.</description>
    </item>
    
    <item>
      <title>A Letter to Students: Math is the Basis for Competitive Edge in Every Field</title>
      <link>https://imtorgdemo.github.io/posts/blog_math-competitive_edge/</link>
      <pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_math-competitive_edge/</guid>
      <description>Math is the greatest tool humans have for solving problems. However, it is incredibly expensive to get the experience of using it in the real-world. This is magnified by most teachers, and many university professors, not having any experience applying math anyplace other than academic contexts. This post shows the author&amp;rsquo;s trying experiences with learning maths in school, as well as the excitement of applying them to solve actual industry problems.</description>
    </item>
    
    <item>
      <title>Building Math from the Ground-Up</title>
      <link>https://imtorgdemo.github.io/posts/blog-logic_for_math/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog-logic_for_math/</guid>
      <description>After completing basic high school mathematics, one might think that math stands on its own. To understand and know that 1+1=2 is obvious. But math can go much deeper. In fact, we can build new concepts from math as well as build a math, itself. This is important because it effects how we think about other subjects, and is especially useful in helping us think about language and abstract concepts, such as in programming.</description>
    </item>
    
    <item>
      <title>Communication Workflows with Hugo, Jupyter, and Friends</title>
      <link>https://imtorgdemo.github.io/posts/blog-hugo_site_process/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog-hugo_site_process/</guid>
      <description>Static Site Generators are quite popular replacements for traditional server-based methods of delivering HTML. One of the most popular is Hugo because of its compilation speed. Combining Hugo with Jupyter notebooks, and other tools, can provide for a speedy workflow for pushing your ideas to the web, books (online or pdf), and more. This post will discuss why you may want to do this and provides tools for doing it.</description>
    </item>
    
    <item>
      <title>Introduction to LaTeX</title>
      <link>https://imtorgdemo.github.io/posts/blog-intro_latex/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog-intro_latex/</guid>
      <description>LaTeX is the document preparation and typesetting system used for scientific publications. LaTeX is based on the idea that &amp;lsquo;it is better to leave document design to document designers&amp;rsquo;, so the user can focus on the content. It requires a greater technical understanding than typical simple note-taking systems; however, because it is incredibly descriptive and produces aesthetically-appealing output, it is becoming more popular. This post provides a reference to configuration and syntax.</description>
    </item>
    
    <item>
      <title>A Data Scientist&#39;s Guide to Modern Java(8&#43;) and the JVM</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_java-modern_java/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_java-modern_java/</guid>
      <description>Most data scientists avoid the Java Virtual Machine (JVM) like the plague. The features that make developers and data engineers so productive as a team, such as access modifiers and powerful IDEs, feel slow, old, and cumbersome to individuals interacting with data and prototyping new algorithms. However, the JVM and its supporting system matured to an indominatble force since its inception. It is ubiquitous in the most popular open-source projects; espectially in Big Data and distributed systems, such as Hadoop and Kafka.</description>
    </item>
    
    <item>
      <title>Introduction to Groovy for Data Science on the JVM</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_java-groovy/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_java-groovy/</guid>
      <description>Groovy is a scripting language that compiles to the Java Virtual Machine. It would be more-aptly named JavaScript if that name were not already taken, but it has many similarities to Python. In fact, some of the libraries implemented for Groovy, such as TableSaw, attempt to take it in the same Data Science direction as Python.
This post will provide an introduction to the Groovy language using Jupyter notebook with BeakerX, and provides specific applications to Data Science.</description>
    </item>
    
    <item>
      <title>The Cost of Internal Investment</title>
      <link>https://imtorgdemo.github.io/posts/blog_econ-return_rate/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_econ-return_rate/</guid>
      <description>There is one question on every economist&amp;rsquo;s mind: Where has inflation gone? It is imperative to understanding how actors make decisions and allocate limited resources. The fact that the inflation rate is so low for so long is incredibly disconcerting for many reasons (with the fear of deflation being just one reason).
Because of low growth and a lack of inflation the US government and Federal Reserve, as well as nearly every nations&amp;rsquo; central Bank, are pouring fuel onto the economy and getting a paltry return.</description>
    </item>
    
    <item>
      <title>The Linux Command Line with Fish Shell</title>
      <link>https://imtorgdemo.github.io/posts/blog_cmdln-linux_fish/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_cmdln-linux_fish/</guid>
      <description>The Linux terminal (typically implemented with the Bourne Again Shell Script, BASH) can be intimidating for beginners and annoying for experienced programmers. But, it is a necessity for most users of Linux; and, in many situations, it can also be a huge productivity enhancer over graphical interfaces.
Fish is a commandline tool that is a great complement to BASH. It is highly configureable and provides nice features such as syntax coloring and TAB command completion, out-of-the-box.</description>
    </item>
    
    <item>
      <title>Simple, Scalable, and Responsive Data Retrieval with ElasticSearch</title>
      <link>https://imtorgdemo.github.io/posts/blog_datastore-elasticsearch/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_datastore-elasticsearch/</guid>
      <description>Distributed systems are very popular tools in the &amp;lsquo;big data&amp;rsquo; market space and ElasticSearch evolved to become one of the major players. It serves the niche role of scaling to store large amounts of data, then allows querying it quickly. It evolved greatly over the last ten years to provide a variety of functionality. While it serves its primary purpose well, teams should resist the urge to use it in other roles, such as advanced analytics.</description>
    </item>
    
    <item>
      <title>Solving Textual Problems with Regular Expressions</title>
      <link>https://imtorgdemo.github.io/posts/blog_nlp-regular_expressions_workflow/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_nlp-regular_expressions_workflow/</guid>
      <description>Regular Expressions provide an important foundation for learning systems. They are useful for quick and direct approaches to solving problems without creating mounds of training data, nor the infrastructure for deploying a model. While they are a common programming technique, and simple enough to employ, they tend to be used so infrequently that you must re-learn them each time you wish to apply. This post summarizes the basic regex syntax, strategies, and workflow in hopes it will decrease the time needed to implement.</description>
    </item>
    
    <item>
      <title>Generalizing the Machine Learning Process</title>
      <link>https://imtorgdemo.github.io/posts/blog_models-machine_learning/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_models-machine_learning/</guid>
      <description>This work describes a general approach to follow when performing machine learning (ML) manually, and when automating in a deployment setting. Unlike a classical statistical analysis, standard machine learning projects typically follow a general and repeatable process. While the practictioner should be aware of details for each of the steps and the reasons for choosing them, there is much less design-thinking and checking of assumptions that are necessary components of more mathematical modeling fields.</description>
    </item>
    
    <item>
      <title>Formatting for Jupyter (.ipynb) Notebooks</title>
      <link>https://imtorgdemo.github.io/posts/blog_test-hugo_blog/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_test-hugo_blog/</guid>
      <description>This is a test post for formatting Jupyter Notebooks for Hugo. This workflow makes use of the code at repository nb2hugo, as well as the beakerx jupyter kernel.
This is will test blog is a complicated workflow. Begin by running the newest version of JupyterLab. Run through the basic markdown sections. Next, try working with the R kernel by using rpy2 library. Run these cells to ensure functionality.
Then close the notebook and re-open it in Beakerx with the beakerx Groovy kernel.</description>
    </item>
    
    <item>
      <title>Formatting a Markdown Post</title>
      <link>https://imtorgdemo.github.io/posts/blog_test-my_first_post/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_test-my_first_post/</guid>
      <description>Cupiditate voluptas sunt velit. Accusantium aliquid expedita excepturi quis laborum autem. Quas occaecati et atque est repellat dolores. Laudantium in molestiae consequatur voluptate ipsa.
Nulla quia non qui sed. Voluptatem et enim nesciunt sunt pariatur. Libero eius excepturi voluptatibus reprehenderit. Facere enim neque dolorem sed ullam non. Dolor sit molestias repellendus.
Awesome-1 Facilis maiores doloribus similique sint quaerat reiciendis quia. Autem nemo voluptas rerum. Eos odio aut omnis. Adipisci voluptas nihil autem recusandae.</description>
    </item>
    
    <item>
      <title>List of ToDo Posts</title>
      <link>https://imtorgdemo.github.io/posts/blog_page-todo/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_page-todo/</guid>
      <description> This is a list of blog posts that are referenced, but not yet complete.
List of Future Posts General Machine Learning
 scoring metrics, model performance metrics, and graphs imbalanced data feature engineering models in-depth  Natural Language Processing
 functional programming numpy nltk / spaCy gensim word2vec fasttext nlp overview  General Data Concepts
 datawarehousing infrastructure architectures serverless deployments  Business and Sales
 pricing pyramid matching problems and solutions marketing -&amp;gt; business development -&amp;gt; sales cycle and org structure  </description>
    </item>
    
    <item>
      <title>Distributing Code in Python</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_py-distributing_code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_py-distributing_code/</guid>
      <description>Distributing and deploying products is a necessary step in the solution development process, and an imperative in business. Each solution must be thoughtfully analyzed for strengths and weaknesses, especially from the perspective of security. The decisons you make are largely based on the language employed to create the solution. This post will describe steps taken in distributing a Python solution.
Introduction to Bytecode Simple python scripts are a terrific approach to getting work done, quickly.</description>
    </item>
    
    <item>
      <title>The Insecurities of the &#39;Great Men&#39;</title>
      <link>https://imtorgdemo.github.io/posts/blog_history-greatman_insecurity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_history-greatman_insecurity/</guid>
      <description>While it may be tough to find the true nature of people, past their outward appearance, it can provide insight into all people, and to yourself. The &amp;lsquo;Great Man&amp;rsquo; theory that leaders are born and not made came about in the 19th century when British aristocrats attained powerful positions through nepotism. It was primarily concerned with explaining leaders such Walpole, Wellington, and Caesar. Much of what is learned in history is their propoganda - getting the reality is much more difficult.</description>
    </item>
    
  </channel>
</rss>