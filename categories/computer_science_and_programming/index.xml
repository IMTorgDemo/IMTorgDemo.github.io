<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer_Science_and_Programming on IMTorg Kbase</title>
    <link>https://imtorgdemo.github.io/categories/computer_science_and_programming/</link>
    <description>Recent content in Computer_Science_and_Programming on IMTorg Kbase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://imtorgdemo.github.io/categories/computer_science_and_programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Cheatsheet for Python&#39;s Pipenv</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_py-pipenv_virtualenv/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_py-pipenv_virtualenv/</guid>
      <description>Python&amp;rsquo;s Pipenv and Pyenv make a strong team for creating a consistent development environment for exact specifications. Pyenv allows you to choose from any Python version for your project. Pipenv attempts to improve upon the original virtual environment (venv) and requirements.txt file. It does some things well, including integration of virtual environment with dependecy management, and is straight-forward to use. Unfortunately, it doesn&amp;rsquo;t always live up to the originally-planned, ambitious, goals.</description>
    </item>
    
    <item>
      <title>Distributing Code in Python</title>
      <link>https://imtorgdemo.github.io/posts/blog_programming_py-distributing_code/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://imtorgdemo.github.io/posts/blog_programming_py-distributing_code/</guid>
      <description>Distributing and deploying products is a necessary step in the solution development process, and an imperative in business. Each solution must be thoughtfully analyzed for strengths and weaknesses, especially from the perspective of security. The decisons you make are largely based on the language employed to create the solution. This post will describe steps taken in distributing a Python solution.
Introduction to Bytecode Simple python scripts are a terrific approach to getting work done, quickly.</description>
    </item>
    
  </channel>
</rss>
